version: '3.9'

networks:
  order-network:
    driver: bridge
    name: order-network

services:
  database-postgres:
    container_name: order-db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - PGUSER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - $POSTGRES_HOST_PORT:$POSTGRES_CONTAINER_PORT
    # volumes:
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - order-network
    healthcheck:
      test:  [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 100
  
  orderapi:
    container_name: order-api
    environment:
      - POSTGRES_DSN=user=$POSTGRES_USER password=$POSTGRES_PASSWORD dbname=$POSTGRES_DB host=$POSTGRES_HOST port=$POSTGRES_CONTAINER_PORT sslmode=disable
      - API_PORT=$API_CONTAINER_PORT
    build:
      context: .
      dockerfile: Dockerfile.api-golang
    ports:
      - $API_HOST_PORT:$API_CONTAINER_PORT
    networks:
      - order-network
    depends_on:
      database-postgres:
        condition: service_healthy